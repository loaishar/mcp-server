{
  "mcpServers": {
    "git": {
      "command": "npx",
      "args": ["-y", "@cyanheads/git-mcp-server"],
      "env": {},
      "description": "Git operations and repository management"
    },
    "memory": {
      "command": "docker",
      "args": ["run", "-i", "-v", "claude-memory:/app/dist", "--rm", "mcp/memory"],
      "env": {},
      "description": "Knowledge Graph Memory Server - Persistent memory using local knowledge graph (Docker-based)"
    },
    "sequential-thinking": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"],
      "env": {},
      "description": "Enhanced reasoning and step-by-step thinking"
    },
    "playwright": {
      "command": "docker",
      "args": ["run", "-i", "--rm", "--init", "--pull=always", "mcr.microsoft.com/playwright/mcp"],
      "env": {},
      "description": "Official Microsoft Playwright MCP server (headless chromium)"
    },
    "filesystem": {
      "command": "docker",
      "args": [
        "run", "-i", "--rm",
        "--mount", "type=bind,src=C:\\Users\\loai1\\OneDrive\\Documents\\GitHub\\mcp-server,dst=/projects/mcp-server",
        "--mount", "type=bind,src=C:\\Users\\loai1\\OneDrive\\Documents,dst=/projects/Documents",
        "--mount", "type=bind,src=C:\\Users\\loai1\\Desktop,dst=/projects/Desktop",
        "mcp/filesystem", "/projects"
      ],
      "env": {},
      "description": "Secure containerized file system operations"
    },
    "fetch": {
      "command": "docker",
      "args": ["run", "-i", "--rm", "mcp/fetch"],
      "env": {},
      "description": "Web content fetching and HTML to markdown conversion"
    },
    "everything": {
      "command": "docker",
      "args": ["run", "-i", "--rm", "mcp/everything"],
      "env": {},
      "description": "Complete MCP protocol test server with all features"
    },
    "supabase": {
      "command": "npx",
      "args": ["-y", "@supabase/mcp-server-supabase@latest"],
      "env": {
        "SUPABASE_ACCESS_TOKEN": "$env:SUPABASE_ACCESS_TOKEN"
      },
      "description": "Supabase database and auth operations"
    },
    "github": {
      "command": "docker",
      "args": [
        "run", "-i", "--rm",
        "-e", "GITHUB_PERSONAL_ACCESS_TOKEN",
        "ghcr.io/github/github-mcp-server"
      ],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "$env:GITHUB_PERSONAL_ACCESS_TOKEN"
      },
      "description": "GitHub repository and issue management"
    },
    "figma": {
      "command": "npx",
      "args": ["-y", "figma-mcp"],
      "env": {
        "FIGMA_API_KEY": "$env:FIGMA_API_KEY"
      },
      "description": "Figma design file access and manipulation"
    },
    "hyperbrowser": {
      "command": "npx",
      "args": ["-y", "hyperbrowser-mcp"],
      "env": {
        "HYPERBROWSER_API_KEY": "$env:HYPERBROWSER_API_KEY"
      },
      "description": "Advanced web browsing and scraping"
    },
    "neon": {
      "command": "npx",
      "args": ["-y", "mcp-remote", "https://mcp.neon.tech/sse"],
      "env": {},
      "description": "Neon database operations"
    },
    "time": {
      "command": "docker",
      "args": ["run", "-i", "--rm", "mcp/time"],
      "env": {},
      "description": "Time and timezone conversion capabilities (Docker-based)"
    },
    "browserbase": {
      "command": "docker",
      "args": [
        "run", "-i", "--rm",
        "-e", "BROWSERBASE_API_KEY",
        "-e", "BROWSERBASE_PROJECT_ID",
        "mcp/browserbase"
      ],
      "env": {
        "BROWSERBASE_API_KEY": "$env:BROWSERBASE_API_KEY",
        "BROWSERBASE_PROJECT_ID": "$env:BROWSERBASE_PROJECT_ID"
      },
      "description": "Cloud-based browser automation with Browserbase (Docker - requires API credentials)"
    },
    "sentry": {
      "command": "npx",
      "args": ["-y", "@sentry/mcp-server@latest"],
      "env": {
        "SENTRY_ACCESS_TOKEN": "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",
        "SENTRY_HOST": "https://sentry.io"
      },
      "description": "Sentry error monitoring and debugging (requires access token)"
    }
  }
}

{
  "mcpServers": {
    "unified-mcp": {
      "command": "docker",
      "args": ["exec", "-i", "unified-mcp-server-stdio", "python", "src/server/unified_mcp_v2.py"],
      "env": {},
      "description": "Unified MCP server with Git and Memory (Docker-based, tested and working)"
    },
    "memory": {
      "command": "docker",
      "args": ["run", "-i", "-v", "claude-memory:/app/dist", "--rm", "mcp/memory"],
      "env": {},
      "description": "Knowledge Graph Memory Server - Persistent memory using local knowledge graph (Docker-based)"
    },
    "filesystem": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "--mount", "type=bind,src=C:\\Users\\loai1\\OneDrive\\Documents\\GitHub\\mcp-server,dst=/projects/mcp-server",
        "--mount", "type=bind,src=C:\\Users\\loai1\\OneDrive\\Documents,dst=/projects/Documents",
        "--mount", "type=bind,src=C:\\Users\\loai1\\Desktop,dst=/projects/Desktop",
        "mcp/filesystem",
        "/projects"
      ],
      "env": {},
      "description": "Secure containerized file system operations"
    },
    "everything": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "mcp/everything"
      ],
      "env": {},
      "description": "Complete MCP protocol test server with all features (Docker-based)"
    },
    "fetch": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "mcp/fetch"
      ],
      "env": {},
      "description": "Web content fetching and HTML to markdown conversion (Docker-based)"
    },
    "playwright": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "--init",
        "--pull=always",
        "mcr.microsoft.com/playwright/mcp"
      ],
      "env": {},
      "description": "Official Microsoft Playwright MCP server (headless chromium)"
    },
    "sequential-thinking": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"],
      "env": {},
      "description": "Enhanced reasoning and step-by-step thinking (NPX - official MCP package)"
    },
    "supabase": {
      "command": "npx",
      "args": ["-y", "@supabase/mcp-server-supabase@latest"],
      "env": {
        "SUPABASE_ACCESS_TOKEN": "sbp_a75051a54209b1840eeeef812906a947c99f77fe"
      },
      "description": "Supabase database and auth operations"
    },
    "time": {
      "command": "docker",
      "args": ["run", "-i", "--rm", "mcp/time"],
      "env": {},
      "description": "Time and timezone conversion capabilities (Docker-based)"
    },
    "browserbase": {
      "command": "docker",
      "args": [
        "run", "-i", "--rm",
        "-e", "BROWSERBASE_API_KEY",
        "-e", "BROWSERBASE_PROJECT_ID",
        "mcp/browserbase"
      ],
      "env": {
        "BROWSERBASE_API_KEY": "",
        "BROWSERBASE_PROJECT_ID": ""
      },
      "description": "Cloud-based browser automation with Browserbase (Docker - requires API credentials)"
    },
    "sentry": {
      "command": "npx",
      "args": ["-y", "@sentry/mcp-server@latest"],
      "env": {
        "SENTRY_ACCESS_TOKEN": "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",
        "SENTRY_HOST": "https://sentry.io"
      },
      "description": "Sentry error monitoring and debugging (requires access token)"
    }
  }
}

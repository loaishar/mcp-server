services:
  # Main Unified MCP Server (Python-based)
  unified-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    image: ${REGISTRY:-}unified-mcp:${TAG:-latest}
    container_name: unified-mcp-server
    restart: unless-stopped
    ports:
      - "3333:3333"
    environment:
      - MCP_PORT=3333
      - MCP_HOST=0.0.0.0
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONUNBUFFERED=1
      - MCP_TRANSPORT=stdio
      - PYTHONIOENCODING=utf-8
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config:ro
      - ./src:/app/src:ro  # Mount source for development
    networks:
      - mcp-network
    stdin_open: true  # Enable STDIN for MCP communication
    tty: false        # Disable TTY to maintain clean STDIO
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    labels:
      - "mcp.server.type=unified"
      - "mcp.server.transport=stdio"

  # Node.js-based MCP Servers
  mcp-nodejs:
    build:
      context: .
      dockerfile: Dockerfile.nodejs
    image: ${REGISTRY:-}mcp-nodejs:${TAG:-latest}
    container_name: mcp-nodejs-servers
    restart: unless-stopped
    ports:
      - "9229:9229"  # Playwright debug
      - "9323:9323"  # Playwright vision
      - "9324:9324"  # Git server
      - "9325:9325"  # Memory server
    environment:
      - NODE_ENV=production
      - PLAYWRIGHT_BROWSERS_PATH=/home/mcp/.cache/ms-playwright
      - DISPLAY=:99
    volumes:
      - ./logs:/app/logs
      - playwright-cache:/home/mcp/.cache/ms-playwright
    networks:
      - mcp-network
    depends_on:
      - unified-mcp

  # Optional: Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: mcp-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - mcp-network
    command: redis-server --appendonly yes
    profiles:
      - full

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: mcp-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - mcp-network
    depends_on:
      - unified-mcp
      - mcp-nodejs
    profiles:
      - full

networks:
  mcp-network:
    driver: bridge
    name: mcp-network

volumes:
  playwright-cache:
    name: mcp-playwright-cache
  redis-data:
    name: mcp-redis-data
